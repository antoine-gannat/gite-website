{"version":3,"sources":["serviceWorker.ts","components/Translation/Translator.ts","components/Navbar/Navbar.web.tsx","components/PresentationCard/PresentationCard.web.tsx","components/Gallery/SlideShow/SlideShow.web.tsx","components/Miscs/CategoryTitle/CategoryTitle.web.tsx","components/Miscs/styles.ts","components/Gallery/Gallery.web.tsx","components/Footer/Footer.web.tsx","components/Map/Map.web.tsx","components/Booking/BookingParser.ts","components/Booking/Booking.web.tsx","pages/Home/Home.web.tsx","Router.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Translator","language","strings","this","key","console","warn","FR","translateComponent","Component","props","translator","resultStrings","EN","Object","assign","defaultStrings","mergeWithDefaultStrings","translate","bind","setLanguage","onFlagClick","localStorage","setItem","createLinkBtn","linkName","className","data-scrollto","aria-label","onClick","id","document","getElementById","scrollIntoView","hash","navbarToggler","getAttribute","click","scrollTo","href","type","data-toggle","data-target","aria-controls","aria-expanded","map","link","tabIndex","role","src","alt","Keys","React","selectedImage","setSelectedImage","images","i","baseUrl","imagesUrl","doesFileExists","push","findImages","url","http","XMLHttpRequest","open","send","status","onKeyDown","ev","keyCode","Escape","setSlide","Left","length","Right","addEventListener","removeEventListener","img","index","CategoryTitle","title","style","cssMerge","classNames","join","lastPage","changePage","newPage","setPage","page","slide","expandButton","hidden","aria-hidden","rel","target","width","height","frameBorder","border","allowFullScreen","closedMonths","BookingParser","rawData","dataAsElement","DOMParser","parseFromString","replace","date","dateAsArray","split","el","Number","Date","week","price","numberOfDays","startDate","parsedStartDate","parseDate","endDate","getFullYear","getMonth","getDate","fortnightOnly","from","to","available","weeks","months","sort","a","b","aTime","getTime","bTime","currentMonth","nb","forEach","weekMonth","includes","allWeeks","querySelectorAll","parsedWeeks","parsedWeek","parseWeek","weeksToMonths","formatDateForDisplay","monthsNames","slice","changeMonthsToDisplay","newValue","setMonthsToDisplay","undefined","bookingMonths","setBookingMonths","monthsToDisplay","fetch","then","data","text","parser","getBookings","disabled","month","monthIndex","weekIndex","displayPrice","sectionsPosition","setTimeout","section","offsetTop","onscroll","scrollPosition","documentElement","scrollTop","body","querySelector","setAttribute","Router","getItem","browserLanguageParsed","navigator","indexOf","toUpperCase","getBrowserLanguage","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.279e68a9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (\n    process.env.PUBLIC_URL &&\n    process.env.NODE_ENV === \"production\" &&\n    \"serviceWorker\" in navigator\n  ) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { StringsObject, TranslateLanguage } from \"../../types/translate\";\nimport { DefaultProps, TranslationProps } from \"../../types/props\";\nimport defaultStrings from \"../../index.strings.json\";\n\nclass Translator {\n  language: TranslateLanguage;\n  strings: StringsObject;\n\n  constructor(language: TranslateLanguage, strings: StringsObject) {\n    this.language = language;\n    this.strings = strings;\n  }\n\n  translate(key: string) {\n    if (!this.strings[this.language][key]) {\n      console.warn(\"No translation found for key:\", key);\n      return this.strings.FR[key];\n    }\n    return this.strings[this.language][key];\n  }\n}\n\nexport function translateComponent<T>(\n  Component: (p: T & TranslationProps) => JSX.Element,\n  strings?: StringsObject\n) {\n  // Merge the parameter strings with the default strings\n  function mergeWithDefaultStrings(): StringsObject {\n    let resultStrings = { EN: {}, FR: {} };\n    Object.assign(resultStrings[\"FR\"], defaultStrings.FR);\n    Object.assign(resultStrings[\"EN\"], defaultStrings.EN);\n    if (strings) {\n      Object.assign(resultStrings[\"FR\"], strings.FR);\n      Object.assign(resultStrings[\"EN\"], strings.EN);\n    }\n    return resultStrings;\n  }\n\n  return function translatedComponent(props: T & DefaultProps): JSX.Element {\n    const translator = new Translator(\n      props.language,\n      mergeWithDefaultStrings()\n    );\n    return Component({\n      ...props,\n      translate: translator.translate.bind(translator),\n    });\n  };\n}\n","import * as React from \"react\";\nimport \"./Navbar.styles.css\";\nimport { DefaultPropsWithTranslation } from \"../../types/props\";\nimport { TranslateLanguage } from \"../../types/translate\";\nimport { translateComponent } from \"../Translation/Translator\";\nimport strings from \"./Navbar.strings.json\";\n\nfunction Navbar({\n  translate,\n  language,\n  setLanguage,\n}: DefaultPropsWithTranslation): JSX.Element {\n  function onFlagClick(language: TranslateLanguage) {\n    localStorage.setItem(\"translation-language\", language);\n    setLanguage(language);\n  }\n\n  function scrollTo(id: string): void {\n    // Scroll to the location\n    document.getElementById(id)?.scrollIntoView();\n    window.location.hash = id;\n    // Close the nav-tray if visible (small screens only)\n    const navbarToggler = document.getElementById(\"navbar-toggler\");\n    if (\n      navbarToggler &&\n      navbarToggler.getAttribute(\"aria-expanded\") === \"true\"\n    ) {\n      navbarToggler.click();\n    }\n  }\n  function createLinkBtn(linkName: string): JSX.Element {\n    return (\n      <li className=\"nav-item\" key={linkName}>\n        <button\n          data-scrollto={linkName}\n          className=\"nav-link\"\n          aria-label={`${translate(\"scrollTo\")} ${translate(linkName)}`}\n          onClick={() => scrollTo(linkName)}\n        >\n          {translate(linkName)}\n        </button>\n      </li>\n    );\n  }\n\n  const links = [\"home\", \"gallery\", \"booking\", \"directions\"];\n\n  return (\n    <nav className=\"nav navbar fixed-top navbar-expand-lg navbar-dark nav\">\n      <a className=\"navbar-brand\" href=\"#home\">\n        Gîte Kerhéré\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        id=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo01\"\n        aria-controls=\"navbarTogglerDemo01\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n        <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n          {links.map((link) => createLinkBtn(link))}\n          <li className=\"nav-item\">\n            <img\n              tabIndex={0}\n              role=\"button\"\n              aria-label=\"Traduire en Français\"\n              onClick={() => onFlagClick(\"FR\")}\n              className={\n                \"nav-link flag\" + (language === \"FR\" ? \" selected\" : \"\")\n              }\n              src=\"/images/flags/fr_flag.webp\"\n              alt={translate(\"FRFlagAlt\")}\n            />\n          </li>\n          <li className=\"nav-item\">\n            <img\n              tabIndex={0}\n              role=\"button\"\n              aria-label=\"Translate to english\"\n              onClick={() => onFlagClick(\"EN\")}\n              className={\n                \"nav-link flag\" + (language === \"EN\" ? \" selected\" : \"\")\n              }\n              src=\"/images/flags/uk_flag.webp\"\n              alt={translate(\"ENFlagAlt\")}\n            />\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default translateComponent(Navbar, strings);\n","import * as React from \"react\";\nimport \"./PresentationCard.styles.css\";\nimport strings from \"./PresentationCard.string.json\";\nimport { translateComponent } from \"../Translation/Translator\";\nimport { DefaultPropsWithTranslation } from \"../../types/props\";\n\nfunction PresentationCard({\n  translate,\n}: DefaultPropsWithTranslation): JSX.Element {\n  return (\n    <div className=\"presentation-card-container col-lg-8 col-md-8 col-sm-12 offset-lg-2 offset-md-2\">\n      <div className=\"row col-12\">\n        <img\n          src=\"/images/pool/picture_1.jpg\"\n          className=\"col-lg-6 col-md-6 col-sm-6\"\n          alt={translate(\"poolAlt\")}\n        />\n        <div className=\"col-lg-6 col-md-6 col-sm-6 presentation-card\">\n          <h3>{translate(\"presentationTitle\")}</h3>\n          <hr />\n          <p>{translate(\"presentationText\")}</p>\n          <div className=\"description-table\">\n            <ul className=\"col-12 row\">\n              <li className=\"col-6\">\n                <span>\n                  {translate(\"capacity\")} : 6 {translate(\"peoples\")}\n                </span>\n              </li>\n              <li className=\"col-6\">\n                <span>{translate(\"wifi\")} </span>\n              </li>\n              <li className=\"col-6\">\n                <span>{translate(\"surface\")} : 95m² </span>\n              </li>\n              <li className=\"col-6\">\n                <span>{translate(\"bedrooms\")} : 3 </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default translateComponent(PresentationCard, strings);\n","import { DefaultPropsWithTranslation } from \"../../../types/props\";\nimport * as React from \"react\";\nimport { translateComponent } from \"../../Translation/Translator\";\nimport strings from \"./Slideshow.strings.json\";\nimport \"./SlideShow.styles.css\";\n\ntype SlideShowProps = {\n  imagesUrl: string;\n  setSlide: React.Dispatch<React.SetStateAction<string | null>>;\n};\n\nenum Keys {\n  Escape = 27,\n  Left = 37,\n  Right = 39,\n}\n\nfunction SlideShow(\n  props: SlideShowProps & DefaultPropsWithTranslation\n): JSX.Element {\n  const [selectedImage, setSelectedImage] = React.useState(0);\n  const images = findImages();\n\n  function doesFileExists(url: string) {\n    var http = new XMLHttpRequest();\n    http.open(\"HEAD\", url, false);\n    http.send();\n    return http.status !== 404;\n  }\n\n  // find all images in a folder\n  function findImages() {\n    let images: string[] = [];\n    let i = 1;\n    const baseUrl = `/images/${props.imagesUrl}/picture_`;\n    while (doesFileExists(`${baseUrl}${i}.jpg`)) {\n      images.push(`${baseUrl}${i}.jpg`);\n      i++;\n    }\n    return images;\n  }\n  // Add event listener on mount\n  React.useEffect(() => {\n    function onKeyDown(this: Document, ev: KeyboardEvent) {\n      // If escape is pressed, leave\n      if (ev.keyCode === Keys.Escape) {\n        props.setSlide(null);\n      } else if (ev.keyCode === Keys.Left) {\n        setSelectedImage(\n          selectedImage === 0 ? images.length - 1 : selectedImage - 1\n        );\n      } else if (ev.keyCode === Keys.Right) {\n        setSelectedImage(\n          selectedImage + 1 >= images.length ? 0 : selectedImage + 1\n        );\n      }\n    }\n    document.addEventListener(\"keydown\", onKeyDown, false);\n    return () => {\n      document.removeEventListener(\"keydown\", onKeyDown, false);\n    };\n  }, [props, images.length, selectedImage]);\n\n  return (\n    <div>\n      <div className=\"slideshow\">\n        <div className=\"display-container col-sm-12 col-md-10 col-lg-10 offset-md-1 offset-lg-1\">\n          <button\n            className=\"nav-button\"\n            aria-label={props.translate(\"prevPicture\")}\n            onClick={() =>\n              setSelectedImage(\n                selectedImage === 0 ? images.length - 1 : selectedImage - 1\n              )\n            }\n          >\n            <i className=\"fas fa-chevron-left fa-3x\"></i>\n          </button>\n          <img\n            className=\"displayed-image\"\n            src={images[selectedImage]}\n            alt={props.imagesUrl}\n          />\n          <button\n            className=\"nav-button\"\n            aria-label={props.translate(\"nextPicture\")}\n            onClick={() =>\n              setSelectedImage(\n                selectedImage + 1 >= images.length ? 0 : selectedImage + 1\n              )\n            }\n          >\n            <i className=\"fas fa-chevron-right fa-3x\"></i>\n          </button>\n        </div>\n        <nav>\n          <ul>\n            {images.map((img, index) => (\n              <li\n                tabIndex={0}\n                aria-label={`${props.translate(\"picture\")} ${index}`}\n                key={`slideshow-img-${index}`}\n                role=\"button\"\n                onClick={() => setSelectedImage(index)}\n                className={index === selectedImage ? \"selected\" : \"\"}\n              >\n                <img src={img} alt={props.imagesUrl} />\n              </li>\n            ))}\n          </ul>\n        </nav>\n        <button\n          className=\"btn close-slide-btn\"\n          onClick={() => props.setSlide(null)}\n          aria-label={props.translate(\"quitSlideshow\")}\n        >\n          <i className=\"fas fa-times\"></i>\n        </button>\n      </div>\n      <div className=\"darkener\"></div>\n    </div>\n  );\n}\n\nexport default translateComponent<SlideShowProps & DefaultPropsWithTranslation>(\n  SlideShow,\n  strings\n);\n","import * as React from \"react\";\nimport \"./CategoryTitle.styles.css\";\n\ntype CategoryTitleProps = {\n  title: string;\n  style?: any;\n};\n\nexport default function CategoryTitle({\n  title,\n  style,\n}: CategoryTitleProps): JSX.Element {\n  return (\n    <div className=\"category-title\" style={style}>\n      <h2>{title}</h2>\n      <hr />\n    </div>\n  );\n}\n","export function cssMerge(...classNames: string[]): string {\n  return classNames.join(\" \");\n}\n","import { DefaultPropsWithTranslation } from \"../../types/props\";\nimport strings from \"./Gallery.strings.json\";\nimport * as React from \"react\";\nimport { translateComponent } from \"../Translation/Translator\";\nimport \"./Gallery.styles.css\";\nimport SlideShow from \"./SlideShow/SlideShow.web\";\nimport CategoryTitle from \"../Miscs/CategoryTitle/CategoryTitle.web\";\nimport { cssMerge } from \"../Miscs/styles\";\n\nlet lastPage = 0;\n\nfunction Gallery(props: DefaultPropsWithTranslation): JSX.Element {\n  function changePage(newPage: number): void {\n    lastPage = newPage;\n    setPage(newPage);\n  }\n  const translate = props.translate;\n  const [page, setPage] = React.useState(0);\n  const [slide, setSlide] = React.useState<string | null>(null);\n  const nbPages = 2;\n  const expandButton = (\n    <div className=\"expand-button\" tabIndex={-1}>\n      <i className=\"fas fa-expand-alt fa-2x\"></i>\n      {translate(\"more\")} ..\n    </div>\n  );\n\n  return (\n    <section id=\"gallery\">\n      <CategoryTitle title={translate(\"gallery\")} />\n      <div className=\"gallery row col-12\">\n        <button\n          aria-label={translate(\"prevPage\")}\n          className=\"prev\"\n          hidden={page - 1 < 0}\n          onClick={() => changePage(page - 1)}\n        >\n          <i className=\"fas fa-chevron-left fa-2x\"></i>\n        </button>\n        <div\n          key=\"gallery-page-1\"\n          aria-hidden={page !== 0}\n          className={cssMerge(\n            \"page-container row\",\n            page !== 0\n              ? page >= lastPage\n                ? \"hide-slide-left\"\n                : \"hide-slide-right\"\n              : \"visible\"\n          )}\n        >\n          <div className=\"vertical-img left col-5\">\n            <img\n              tabIndex={page !== 0 ? -1 : 0}\n              aria-label={`${translate(\"poolAlt\")} ${translate(\"slideshow\")}`}\n              src=\"/images/pool/picture_1.jpg\"\n              role=\"button\"\n              alt={translate(\"poolAlt\")}\n              onClick={() => setSlide(\"pool\")}\n            />\n            {expandButton}\n          </div>\n          <div className=\"row col-7 horizontal-container\">\n            <div className=\"horizontal-img\">\n              <img\n                tabIndex={page !== 0 ? -1 : 0}\n                aria-label={`${translate(\"bedrooms\")} ${translate(\n                  \"slideshow\"\n                )}`}\n                src=\"/images/bedrooms/picture_1.jpg\"\n                role=\"button\"\n                alt={translate(\"bedroomAlt\")}\n                onClick={() => setSlide(\"bedrooms\")}\n              />\n              {expandButton}\n            </div>\n            <div className=\"horizontal-img\">\n              <img\n                tabIndex={page !== 0 ? -1 : 0}\n                aria-label={`${translate(\"outdoorAlt\")} ${translate(\n                  \"slideshow\"\n                )}`}\n                src=\"/images/outdoor/picture_1.jpg\"\n                role=\"button\"\n                alt={translate(\"outdoorAlt\")}\n                onClick={() => setSlide(\"outdoor\")}\n              />\n              {expandButton}\n            </div>\n          </div>\n        </div>\n        <div\n          key=\"gallery-page-2\"\n          aria-hidden={page !== 1}\n          className={cssMerge(\n            \"page-container row\",\n            page !== 1\n              ? page > lastPage\n                ? \"hide-slide-left\"\n                : \"hide-slide-right\"\n              : \"visible\"\n          )}\n        >\n          <div className=\"row col-7 horizontal-container\">\n            <div className=\"horizontal-img\">\n              <img\n                tabIndex={page !== 1 ? -1 : 0}\n                aria-label={`${translate(\"kitchenAlt\")} ${translate(\n                  \"slideshow\"\n                )}`}\n                src=\"/images/kitchen/picture_1.jpg\"\n                role=\"button\"\n                alt={translate(\"kitchenAlt\")}\n                onClick={() => setSlide(\"kitchen\")}\n              />\n              {expandButton}\n            </div>\n            <div className=\"horizontal-img\">\n              <img\n                tabIndex={page !== 1 ? -1 : 0}\n                aria-label={`${translate(\"environmentAlt\")} ${translate(\n                  \"slideshow\"\n                )}`}\n                src=\"/images/environment/picture_1.jpg\"\n                role=\"button\"\n                alt={translate(\"environmentAlt\")}\n                onClick={() => setSlide(\"environment\")}\n              />\n              {expandButton}\n            </div>\n          </div>\n          <div className=\"vertical-img right col-5\">\n            <img\n              tabIndex={page !== 1 ? -1 : 0}\n              aria-label={`${translate(\"diningRoomAlt\")} ${translate(\n                \"slideshow\"\n              )}`}\n              src=\"/images/dining-room/picture_1.jpg\"\n              role=\"button\"\n              alt={translate(\"diningRoomAlt\")}\n              onClick={() => setSlide(\"dining-room\")}\n            />\n            {expandButton}\n          </div>\n        </div>\n        <button\n          className=\"next\"\n          aria-label={translate(\"nextPage\")}\n          hidden={page + 1 >= nbPages}\n          onClick={() => changePage(page + 1)}\n        >\n          <i className=\"fas fa-chevron-right fa-2x\"></i>\n        </button>\n      </div>\n      {slide && <SlideShow {...props} imagesUrl={slide} setSlide={setSlide} />}\n    </section>\n  );\n}\n\nexport default translateComponent(Gallery, strings);\n","import * as React from \"react\";\nimport \"./Footer.styles.css\";\nimport { DefaultPropsWithTranslation } from \"../../types/props\";\nimport { translateComponent } from \"../Translation/Translator\";\nimport strings from \"./Footer.strings.json\";\nimport CategoryTitle from \"../Miscs/CategoryTitle/CategoryTitle.web\";\n\nfunction Footer({ translate }: DefaultPropsWithTranslation): JSX.Element {\n  return (\n    <footer className=\"footer\" id=\"contact\">\n      <CategoryTitle title={translate(\"contact_info\")} />\n      <ul className=\"row col-12\">\n        <li className=\"col-lg-6 col-md-6 col-sm-12\">\n          Jean Claude & Françoise GANNAT\n        </li>\n        <li className=\"col-lg-6 col-md-6 col-sm-12\">\n          <a href=\"tel:+33 06 65 18 21 97\" title={translate(\"click_to_call\")}>\n            +33 06 65 18 21 97\n          </a>\n        </li>\n        <li className=\"col-lg-6 col-md-6 col-sm-12\">\n          <a href=\"mailto:jeanclaude.gannat@hotmail.fr\">\n            jeanclaude.gannat@hotmail.fr\n          </a>\n        </li>\n        <li className=\"col-lg-6 col-md-6 col-sm-12\">\n          <a\n            href=\"https://g.page/gitepiscineinterieurefinistere?share\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Kerhéré, 29510 BRIEC, FRANCE\n          </a>\n        </li>\n      </ul>\n      <p>© 2020, Antoine GANNAT</p>\n    </footer>\n  );\n}\n\nexport default translateComponent(Footer, strings);\n","import * as React from \"react\";\nimport { DefaultPropsWithTranslation } from \"../../types/props\";\nimport { translateComponent } from \"../Translation/Translator\";\nimport strings from \"./Map.strings.json\";\nimport CategoryTitle from \"../Miscs/CategoryTitle/CategoryTitle.web\";\n\nfunction Map({ translate }: DefaultPropsWithTranslation): JSX.Element {\n  return (\n    <section className=\"col-12 mt-5\" id=\"directions\">\n      <CategoryTitle title={translate(\"directions\")} />\n      <iframe\n        className=\"col-lg-6 col-md-10 col-sm-12 offset-lg-3 offset-md-1\"\n        src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2661.4819459257537!2d-4.025835684350243!3d48.15879197922521!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x48112fef6730783f%3A0x472160ddc66f7d07!2sGite%20de%20Kerh%C3%A9r%C3%A9%20avec%20piscine%20int%C3%A9rieure%20sauna%20baln%C3%A9o%20location%20saisonni%C3%A8re%20Finist%C3%A8re%20Bretagne!5e0!3m2!1sen!2sfr!4v1595003012002!5m2!1sen!2sfr\"\n        width=\"600\"\n        height=\"450\"\n        frameBorder=\"0\"\n        style={{ border: 0 }}\n        allowFullScreen={true}\n        aria-hidden=\"false\"\n        tabIndex={0}\n        title={translate(\"directions\")}\n      ></iframe>\n    </section>\n  );\n}\n\nexport default translateComponent(Map, strings);\n","export type BookingWeek = {\n  from: Date;\n  to: Date;\n  price: number;\n  url: string;\n  available: boolean;\n  fortnightOnly: boolean;\n};\n\nexport type BookingMonth = {\n  weeks: BookingWeek[];\n  nb: number;\n};\n\n// Months where the gite is closed\nconst closedMonths = [1, 2, 3, 11, 12];\n\nexport default class BookingParser {\n  dataAsElement: Document;\n  constructor(rawData: string) {\n    // parse the string to an HTML element\n    this.dataAsElement = new DOMParser().parseFromString(\n      rawData.replace(/\\\\\"/g, '\"'),\n      \"text/html\"\n    );\n  }\n\n  parseDate(date: string): Date {\n    const dateAsArray: number[] = date\n      .replace(/\\\\\\//g, \" \")\n      .split(\" \")\n      .map((el) => Number(el));\n    return new Date(dateAsArray[2], dateAsArray[1] - 1, dateAsArray[0]);\n  }\n\n  parseWeek(week: Element): BookingWeek | null {\n    const className = week.getAttribute(\"class\");\n    const price = week.getAttribute(\"data-prix\");\n    const numberOfDays = week.getAttribute(\"data-nbj\");\n    const startDate = week.getAttribute(\"data-deb\");\n    if (\n      !price ||\n      !startDate ||\n      !numberOfDays ||\n      !className ||\n      Number(numberOfDays) !== 7\n    ) {\n      return null;\n    }\n\n    const parsedStartDate = this.parseDate(startDate);\n    const endDate = new Date(\n      parsedStartDate.getFullYear(),\n      parsedStartDate.getMonth(),\n      parsedStartDate.getDate() + Number(numberOfDays)\n    );\n    const fortnightOnly = className === \"indisponible partiellementDispo\";\n    const url = `https://reservation.itea.fr/resa/etape1.php?ident=gites29_b${parsedStartDate.getFullYear()}.1.29G17250.G&exe=${parsedStartDate.getFullYear()}&dep=29&jour=${parsedStartDate.getDate()}&mois=${\n      parsedStartDate.getMonth() + 1\n    }&annee=${parsedStartDate.getFullYear()}&duree=${\n      fortnightOnly ? Number(numberOfDays) * 2 : numberOfDays\n    }&referer=www.google.fr&OPE=WFNGF`;\n\n    return {\n      price: Number(price),\n      from: parsedStartDate,\n      to: endDate,\n      available: className === \"libre\" || fortnightOnly,\n      url,\n      fortnightOnly,\n    };\n  }\n\n  weeksToMonths(weeks: BookingWeek[]): BookingMonth[] {\n    let months: BookingMonth[] = [];\n    // sort weeks by start date\n    weeks.sort((a, b) => {\n      const aTime = a.from.getTime();\n      const bTime = b.from.getTime();\n      if (aTime < bTime) {\n        return -1;\n      } else if (aTime === bTime) {\n        return 0;\n      } else {\n        return 1;\n      }\n    });\n\n    let currentMonth: BookingMonth = { nb: -1, weeks: [] };\n    weeks.forEach((week) => {\n      const weekMonth = week.from.getMonth();\n      // Remove the week if the cotage is closed during this month\n      if (closedMonths.includes(weekMonth + 1)) {\n        return;\n      }\n      if (weekMonth !== currentMonth.nb) {\n        if (currentMonth.weeks.length > 0) {\n          months.push({\n            nb: currentMonth.nb,\n            weeks: currentMonth.weeks,\n          });\n        }\n        currentMonth.nb = weekMonth;\n        currentMonth.weeks = [];\n      }\n      currentMonth.weeks.push(week);\n    });\n    if (currentMonth.weeks.length > 0) {\n      months.push(currentMonth);\n    }\n    return months;\n  }\n\n  getBookings(): BookingMonth[] {\n    // Get the month tables (a table contain the booking for a month)\n    const allWeeks = this.dataAsElement.querySelectorAll(\n      \"table .tarifsAvecDispo_detailUnMois_tarifUneDuree [data-duree-tarif=semaine] td\"\n    );\n    const parsedWeeks: BookingWeek[] = [];\n\n    allWeeks.forEach((week) => {\n      const parsedWeek = this.parseWeek(week);\n      if (parsedWeek) {\n        parsedWeeks.push(parsedWeek);\n      }\n    });\n\n    return this.weeksToMonths(parsedWeeks);\n  }\n}\n","import * as React from \"react\";\nimport \"./Booking.styles.css\";\nimport { DefaultPropsWithTranslation } from \"../../types/props\";\nimport { translateComponent } from \"../Translation/Translator\";\nimport strings from \"./Booking.strings.json\";\nimport CategoryTitle from \"../Miscs/CategoryTitle/CategoryTitle.web\";\nimport BookingParser, { BookingMonth, BookingWeek } from \"./BookingParser\";\nimport { cssMerge } from \"../Miscs/styles\";\n\nconst gdfReservationsUrl =\n  \"https://widget.itea.fr/widget.php?callback=jQuery112303482632914327839_1548135152074&widget=prix&key=FNGF-00MV3EXI&dpt=&langue=FR&numGite=29G17250&codeProd=&iframe=&sansCss=0&ope=&height=&width=&periode=&affichage=&numChambre=&clicsurcalendrier=&nbMois=1&photo=&prix=&text=&affichequenoteglobale=&bureauitea=&avecPrix=&_=1548135152075\";\n\nfunction Booking({ translate }: DefaultPropsWithTranslation): JSX.Element {\n  function formatDateForDisplay(date: Date): string {\n    return `${date.getDate()} ${monthsNames[date.getMonth()].slice(0, 3)}`;\n  }\n\n  function displayPrice(week: BookingWeek): JSX.Element {\n    if (!week.available) {\n      return <>{translate(\"unavailable\")}</>;\n    }\n    if (week.price === 0) {\n      return <>{translate(\"fortnightOnly\")}</>;\n    }\n    return <>{week.price} €</>;\n  }\n\n  function changeMonthsToDisplay(newValue: number) {\n    setMonthsToDisplay(newValue);\n    document.getElementById(\"booking\")?.scrollIntoView();\n  }\n\n  function displayBooking(): JSX.Element[] | JSX.Element {\n    if (bookingMonths === undefined) {\n      return <h3>Loading..</h3>;\n    }\n\n    return bookingMonths\n      .slice(monthsToDisplay - 3, monthsToDisplay)\n      .map((month, monthIndex) => (\n        <div key={`month-${monthIndex}`}>\n          <h2>\n            {monthsNames[month.nb]} {month.weeks[0]?.from.getFullYear()}\n          </h2>\n          <ul className=\"row col-12\">\n            {month.weeks.map((week, weekIndex) => (\n              <li\n                className={cssMerge(\n                  \"week col-lg-3 col-md-4 col-sm-6 col-12\",\n                  week.available ? \"available\" : \"not-available\"\n                )}\n                role=\"button\"\n                onClick={() => week.available && window.open(week.url)}\n                key={`month-${month.nb}-week-${weekIndex}`}\n              >\n                <h3 className=\"date\">\n                  {formatDateForDisplay(week.from)} -{\" \"}\n                  {formatDateForDisplay(week.to)}\n                </h3>\n                <p className=\"price\">{displayPrice(week)}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ));\n  }\n\n  const monthsNames = [\n    translate(\"january\"),\n    translate(\"february\"),\n    translate(\"march\"),\n    translate(\"april\"),\n    translate(\"may\"),\n    translate(\"june\"),\n    translate(\"july\"),\n    translate(\"august\"),\n    translate(\"september\"),\n    translate(\"october\"),\n    translate(\"november\"),\n    translate(\"december\"),\n  ];\n  const [bookingMonths, setBookingMonths] = React.useState<\n    BookingMonth[] | undefined\n  >(undefined);\n  const [monthsToDisplay, setMonthsToDisplay] = React.useState<number>(3);\n  React.useEffect(() => {\n    fetch(gdfReservationsUrl).then(async (data) => {\n      const parser = new BookingParser(await data.text());\n      setBookingMonths(parser.getBookings());\n    });\n  }, []);\n  return (\n    <section\n      id=\"booking\"\n      className=\"booking mt-5 col-lg-10 col-md-10 col-sm-12 offset-lg-1 offset-md-1\"\n    >\n      <CategoryTitle title={translate(\"booking\")} />\n      <div className=\"col-lg-6 col-md-8 offset-lg-3 offset-md-4\">\n        <button\n          className=\"btn btn-more col-6\"\n          disabled={monthsToDisplay <= 3}\n          onClick={() => changeMonthsToDisplay(monthsToDisplay - 3)}\n        >\n          <i className=\"fas fa-chevron-left\"></i> {translate(\"prev\")}\n        </button>\n        <button\n          id=\"next-months-btn\"\n          className=\"btn btn-more col-6\"\n          disabled={!bookingMonths || monthsToDisplay >= bookingMonths.length}\n          onClick={() => changeMonthsToDisplay(monthsToDisplay + 3)}\n        >\n          {translate(\"next\")} <i className=\"fas fa-chevron-right\"></i>\n        </button>\n      </div>\n      {displayBooking()}\n      <a href=\"#booking\">\n        <small>{translate(\"nextMonthsTip\")}</small>\n      </a>\n    </section>\n  );\n}\n\nexport default translateComponent(Booking, strings);\n","import * as React from \"react\";\nimport Navbar from \"../../components/Navbar/Navbar.web\";\nimport \"./Home.styles.css\";\nimport PresentationCard from \"../../components/PresentationCard/PresentationCard.web\";\nimport { DefaultPropsWithTranslation } from \"../../types/props\";\nimport strings from \"./Home.strings.json\";\nimport { translateComponent } from \"../../components/Translation/Translator\";\nimport Gallery from \"../../components/Gallery/Gallery.web\";\nimport Footer from \"../../components/Footer/Footer.web\";\nimport Map from \"../../components/Map/Map.web\";\nimport Booking from \"../../components/Booking/Booking.web\";\n\nfunction Home(props: DefaultPropsWithTranslation): JSX.Element {\n  React.useEffect(() => {\n    const sectionsPosition: any = {};\n\n    setTimeout(() => {\n      document.querySelectorAll(\"section\").forEach((section) => {\n        sectionsPosition[section.id] = section.offsetTop;\n      });\n      window.onscroll = function () {\n        const scrollPosition =\n          document.documentElement.scrollTop || document.body.scrollTop;\n\n        for (const key in sectionsPosition) {\n          if (sectionsPosition[key] <= scrollPosition) {\n            document\n              .querySelector(\".active\")\n              ?.setAttribute(\"class\", \"nav-link\");\n            document\n              .querySelector(\"button[data-scrollto*=\" + key + \"]\")\n              ?.setAttribute(\"class\", \"nav-link active\");\n          }\n        }\n      };\n    }, 1000);\n  });\n  return (\n    <div>\n      <main>\n        <Navbar {...props} />\n        <section className=\"home-image-container\" id=\"home\">\n          <div className=\"centered-titles\">\n            <h1>{props.translate(\"title\")}</h1>\n            <h2 className=\"fade-in\">{props.translate(\"subtitle\")}</h2>\n            <a className=\"btn\" href=\"#booking\">\n              {props.translate(\"booking\")}\n            </a>\n          </div>\n        </section>\n        <div className=\"page-content\">\n          <PresentationCard {...props} />\n          <Gallery {...props} />\n          <Booking {...props} />\n          <Map {...props} />\n        </div>\n      </main>\n      <Footer {...props} />\n    </div>\n  );\n}\n\nexport default translateComponent(Home, strings);\n","import * as React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home/Home.web\";\nimport { DefaultProps } from \"./types/props\";\nimport { TranslateLanguage } from \"./types/translate.d\";\n\nexport default function Router(): JSX.Element {\n    function getBrowserLanguage(): TranslateLanguage | null {\n        let browserLanguageParsed: string = navigator.language\n            .slice(0, navigator.language.indexOf(\"-\"))\n            .toUpperCase();\n        if (browserLanguageParsed === \"US\" || browserLanguageParsed === \"EN\"){\n          return (\"EN\");\n        }\n        else if (browserLanguageParsed === \"FR\"){\n          return \"FR\";\n        }\n\n        return null;\n    }\n\n    // Language to use if the browser's one is unknown and none is stored\n    const backupLanguage = \"FR\";\n    const [language, setLanguage] = React.useState(\n        localStorage.getItem(\"translation-language\") ||\n            getBrowserLanguage() ||\n            backupLanguage\n    );\n\n    const props: DefaultProps = {\n        language: language,\n        setLanguage: setLanguage,\n    };\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/\">\n                    <Home {...props} />\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Router from \"./Router\";\nimport \"./index.styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}